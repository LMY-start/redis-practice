plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.self.learning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}
def JUNIT5_API_VERSION = '5.3.2'

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-data-redis') {
        exclude group: 'io.lettuce', module: 'lettuce-core'
    }
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${JUNIT5_API_VERSION}"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:${JUNIT5_API_VERSION}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${JUNIT5_API_VERSION}"

    //引入 Jedis 的依赖，这样 Spring Boot 实现对 Jedis 的自动化配置,也可以使用带有connection factory的构造方法
    compile group: 'redis.clients', name: 'jedis', version: '3.1.0'
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.62'
}

test {
    useJUnitPlatform()
}
